// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Post {
  id      Int     @id @default(autoincrement())
  title   String
  content String?
}

model User {
  id   Int    @id @default(autoincrement())
  name String
  rankings UserRanking[]
  todayRecommendedSongId  Int?
  todayRecommendedSong    Song?      @relation(fields: [todayRecommendedSongId], references: [id], onDelete: SetNull)
}

model Post_mokjak {
  id      Int     @id @default(autoincrement())
  title   String
  content String?
}

model Song {
  id           Int       @id @default(autoincrement())
  title        String
  artist       String
  thumbnailUrl String?
  album        String?
  rankings     UserRanking[]
  usersTodayRecommended User []
}

model UserRanking {
  id        Int      @id @default(autoincrement())
  userId    Int
  songId    Int
  rank      Int      @default(0) @map("song_rank")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User @relation(fields: [userId], references: [id])
  song      Song @relation(fields: [songId], references: [id])

  @@unique([userId, songId])
  @@unique([userId, rank])

  @@map("user_rankings")
}
